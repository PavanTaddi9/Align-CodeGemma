[
  {
    "test_code": "@parameterized.parameters(jtu.dtypes.floating + jtu.dtypes.complex)\ndef test_grads(self, dtype):\n    x = jnp.linspace(-0.5, 0.5, 15, dtype=dtype).reshape((3, 5))\n    jtu.check_grads(rms_norm.rms_norm, (x,), order=1, modes=('rev',))",
    "assertions": [],
    "test_file": "/var/folders/q5/p2sqhr0d6nqb_h8x_fxyxpz80000gn/T/tmp_1jzy6em/jax/examples/ffi/tests/rms_norm_test.py",
    "function": "def check_grads(f, args, order, atol=None, rtol=None, eps=None):\n    default_tol = 1e-06 if config.enable_x64.value else 0.01\n    atol = atol or default_tol\n    rtol = rtol or default_tol\n    eps = eps or default_tol\n    jtu.check_jvp(f, partial(jax.jvp, f), args, atol, rtol, eps)\n    jtu.check_vjp(f, partial(jax.vjp, f), args, atol, rtol, eps)"
  },
  {
    "test_code": "@parameterized.parameters(jtu.dtypes.floating + jtu.dtypes.complex)\ndef test_basic(self, dtype):\n    x = jnp.linspace(-0.5, 0.5, 15, dtype=dtype)\n    self.assertAllClose(rms_norm.rms_norm(x), rms_norm_ref(x))",
    "assertions": [],
    "test_file": "/var/folders/q5/p2sqhr0d6nqb_h8x_fxyxpz80000gn/T/tmp_1jzy6em/jax/examples/ffi/tests/rms_norm_test.py",
    "function": "def rms_norm_ref(x, eps=1e-05):\n    eps = jnp.float32(eps).astype(x.dtype)\n    scale = jnp.sqrt(jnp.mean(jnp.square(x), axis=-1, keepdims=True) + eps)\n    return x / scale"
  }
]