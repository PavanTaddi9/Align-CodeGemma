[
  {
    "test_code": "def test_empty(self):\n    stack = Stack.create(7, jnp.zeros((), jnp.int32))\n    self.assertTrue(stack.empty())",
    "assertions": [],
    "test_file": "/var/folders/q5/p2sqhr0d6nqb_h8x_fxyxpz80000gn/T/tmp_1jzy6em/jax/tests/stack_test.py",
    "function": "def zeros(shape):\n    if not isinstance(shape, (tuple, list)):\n        shape = (shape,)\n    return lax.broadcast(jnp.float32(0.0), shape)"
  },
  {
    "test_code": "def test_pushes_and_pops(self):\n    stack = Stack.create(7, jnp.zeros((), jnp.int32))\n    stack = stack.push(jnp.int32(7))\n    self.assertFalse(stack.empty())\n    stack = stack.push(jnp.int32(8))\n    self.assertFalse(stack.empty())\n    x, stack = stack.pop()\n    self.assertFalse(stack.empty())\n    self.assertEqual(8, x)\n    stack = stack.push(jnp.int32(9))\n    x, stack = stack.pop()\n    self.assertFalse(stack.empty())\n    self.assertEqual(9, x)\n    x, stack = stack.pop()\n    self.assertTrue(stack.empty())\n    self.assertEqual(7, x)",
    "assertions": [],
    "test_file": "/var/folders/q5/p2sqhr0d6nqb_h8x_fxyxpz80000gn/T/tmp_1jzy6em/jax/tests/stack_test.py",
    "function": "def zeros(shape):\n    if not isinstance(shape, (tuple, list)):\n        shape = (shape,)\n    return lax.broadcast(jnp.float32(0.0), shape)"
  }
]