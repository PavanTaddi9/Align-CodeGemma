[
  {
    "test_code": "@jtu.sample_product(linear_size=linear_sizes, dtype=jtu.dtypes.floating + jtu.dtypes.complex, termination_size=[1, 19])\ndef test_spectral_dac_eigh(self, linear_size, dtype, termination_size):\n    if not jtu.test_device_matches(['tpu']) and termination_size != 1:\n        raise unittest.SkipTest('Termination sizes greater than 1 only work on TPU')\n    rng = self.rng()\n    H = rng.randn(linear_size, linear_size)\n    H = jnp.array(0.5 * (H + H.conj().T)).astype(dtype)\n    if jnp.dtype(dtype).name in ('bfloat16', 'float16'):\n        self.assertRaises(NotImplementedError, lax_eigh.eigh, H)\n        return\n    evs, V = lax_eigh.eigh(H, termination_size=termination_size)\n    ev_exp, _ = jnp.linalg.eigh(H)\n    HV = jnp.dot(H, V, precision=lax.Precision.HIGHEST)\n    vV = evs.astype(V.dtype)[None, :] * V\n    eps = jnp.finfo(H.dtype).eps\n    atol = jnp.linalg.norm(H) * eps\n    self.assertAllClose(ev_exp, jnp.sort(evs), atol=20 * atol)\n    self.assertAllClose(HV, vV, atol=atol * (140 if jnp.issubdtype(dtype, jnp.complexfloating) else 40))",
    "assertions": [],
    "test_file": "/var/folders/q5/p2sqhr0d6nqb_h8x_fxyxpz80000gn/T/tmp_1jzy6em/jax/tests/lax_scipy_spectral_dac_test.py",
    "function": "def norm(x):\n    norm = np.linalg.norm(x, axis=(-2, -1))\n    return norm / ((inner_dimension + 1) * jnp.finfo(dtype).eps)"
  },
  {
    "test_code": "@jtu.sample_product(linear_size=linear_sizes, dtype=jtu.dtypes.floating + jtu.dtypes.complex, termination_size=[1, 19])\ndef test_spectral_dac_eigh(self, linear_size, dtype, termination_size):\n    if not jtu.test_device_matches(['tpu']) and termination_size != 1:\n        raise unittest.SkipTest('Termination sizes greater than 1 only work on TPU')\n    rng = self.rng()\n    H = rng.randn(linear_size, linear_size)\n    H = jnp.array(0.5 * (H + H.conj().T)).astype(dtype)\n    if jnp.dtype(dtype).name in ('bfloat16', 'float16'):\n        self.assertRaises(NotImplementedError, lax_eigh.eigh, H)\n        return\n    evs, V = lax_eigh.eigh(H, termination_size=termination_size)\n    ev_exp, _ = jnp.linalg.eigh(H)\n    HV = jnp.dot(H, V, precision=lax.Precision.HIGHEST)\n    vV = evs.astype(V.dtype)[None, :] * V\n    eps = jnp.finfo(H.dtype).eps\n    atol = jnp.linalg.norm(H) * eps\n    self.assertAllClose(ev_exp, jnp.sort(evs), atol=20 * atol)\n    self.assertAllClose(HV, vV, atol=atol * (140 if jnp.issubdtype(dtype, jnp.complexfloating) else 40))",
    "assertions": [],
    "test_file": "/var/folders/q5/p2sqhr0d6nqb_h8x_fxyxpz80000gn/T/tmp_1jzy6em/jax/tests/lax_scipy_spectral_dac_test.py",
    "function": "def norm(x):\n    norm = np.linalg.norm(x, axis=(-2, -1))\n    return norm / ((n + 1) * jnp.finfo(dtype).eps)"
  }
]